version: '3.8'

services:
  # PostgreSQL Database for User Service
  postgres:
    image: postgres:15-alpine
    container_name: authify_postgres
    environment:
      POSTGRES_DB: authify_db
      POSTGRES_USER: authify_user
      POSTGRES_PASSWORD: authify_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: authify_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  # User Service (Authify)
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      - DATABASE_URL=postgresql://authify_user:authify_password@postgres:5432/authify_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=super-secret-jwt-key-for-development-only-change-in-production
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      - API_V1_STR=/api/v1
      - PROJECT_NAME=Authify User Service
      - DEBUG=True
      - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "https://work-1-qivpqxdxprbfynjb.prod-runtime.all-hands.dev", "https://work-2-qivpqxdxprbfynjb.prod-runtime.all-hands.dev"]
      - RATE_LIMIT_PER_MINUTE=60
      - BCRYPT_ROUNDS=12
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/user-service:/app
    networks:
      - backend
    restart: unless-stopped

  # Kong Gateway
  kong-database:
    image: postgres:15-alpine
    container_name: kong_postgres
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong_password
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - backend

  kong-migration:
    image: kong:3.4
    container_name: kong_migration
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong_password
    depends_on:
      - kong-database
    networks:
      - backend

  kong:
    image: kong:3.4
    container_name: kong_gateway
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong_password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    ports:
      - "8000:8000"  # Kong Proxy
      - "8002:8001"  # Kong Admin API
    depends_on:
      - kong-database
      - kong-migration
      - user-service
    volumes:
      - ./kong-gateway/kong.yml:/opt/kong/kong.yml
    networks:
      - backend
    restart: unless-stopped

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: client_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://kong:8000
      - NODE_ENV=development
    ports:
      - "12000:3000"
    depends_on:
      - kong
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  kong_data:

networks:
  backend:
    driver: bridge